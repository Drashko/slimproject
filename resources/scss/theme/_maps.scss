$theme-colors-rgb: map-loop($theme-all-colors, to-rgb, '$value') !default;
$dark-theme-colors-rgb: map-loop(
  $dark-theme-all-colors,
  to-rgb,
  '$value'
) !default;
$grays-rgb: map-loop($grays, to-rgb, '$value') !default;
$dark-grays-rgb: map-loop($dark-grays, to-rgb, '$value') !default;
$utilities-colors: $theme-colors-rgb !default;
$utilities-border-colors: map-loop(
  $utilities-colors,
  rgba-css-var,
  '$key',
  'border'
) !default;

// Utilities maps
//
// Extends the default `$theme-colors` maps to help create our utilities.

// Come v6, we'll de-dupe these variables. Until then, for backward compatibility, we keep them to reassign.
// scss-docs-start utilities-colors
$utilities-colors: $theme-colors-rgb !default;
// scss-docs-end utilities-colors

// scss-docs-start utilities-text-colors
$utilities-text: map-merge(
                $utilities-colors,
                (
                        "black": to-rgb($black),
                        "white": to-rgb($white),
                        "body": to-rgb($body-color)
                )
) !default;
$utilities-text-colors: map-loop($utilities-text, rgba-css-var, "$key", "text") !default;

$utilities-text-emphasis-colors: (
        "primary-emphasis": var(--#{$prefix}primary-text-emphasis),
        "secondary-emphasis": var(--#{$prefix}secondary-text-emphasis),
        "success-emphasis": var(--#{$prefix}success-text-emphasis),
        "info-emphasis": var(--#{$prefix}info-text-emphasis),
        "warning-emphasis": var(--#{$prefix}warning-text-emphasis),
        "danger-emphasis": var(--#{$prefix}danger-text-emphasis),
        "light-emphasis": var(--#{$prefix}light-text-emphasis),
        "dark-emphasis": var(--#{$prefix}dark-text-emphasis)
) !default;
// scss-docs-end utilities-text-colors

// scss-docs-start utilities-bg-colors
$utilities-bg: map-merge(
                $utilities-colors,
                (
                        "black": to-rgb($black),
                        "white": to-rgb($white),
                        "body": to-rgb($body-bg)
                )
) !default;
$utilities-bg-colors: map-loop($utilities-bg, rgba-css-var, "$key", "bg") !default;

$utilities-bg-subtle: (
        "primary-subtle": var(--#{$prefix}primary-bg-subtle),
        "secondary-subtle": var(--#{$prefix}secondary-bg-subtle),
        "success-subtle": var(--#{$prefix}success-bg-subtle),
        "info-subtle": var(--#{$prefix}info-bg-subtle),
        "warning-subtle": var(--#{$prefix}warning-bg-subtle),
        "danger-subtle": var(--#{$prefix}danger-bg-subtle),
        "light-subtle": var(--#{$prefix}light-bg-subtle),
        "dark-subtle": var(--#{$prefix}dark-bg-subtle)
) !default;
// scss-docs-end utilities-bg-colors

// scss-docs-start utilities-border-colors
$utilities-border: map-merge(
                $utilities-colors,
                (
                        "black": to-rgb($black),
                        "white": to-rgb($white)
                )
) !default;
$utilities-border-colors: map-loop($utilities-border, rgba-css-var, "$key", "border") !default;

$utilities-border-subtle: (
        "primary-subtle": var(--#{$prefix}primary-border-subtle),
        "secondary-subtle": var(--#{$prefix}secondary-border-subtle),
        "success-subtle": var(--#{$prefix}success-border-subtle),
        "info-subtle": var(--#{$prefix}info-border-subtle),
        "warning-subtle": var(--#{$prefix}warning-border-subtle),
        "danger-subtle": var(--#{$prefix}danger-border-subtle),
        "light-subtle": var(--#{$prefix}light-border-subtle),
        "dark-subtle": var(--#{$prefix}dark-border-subtle)
) !default;
// scss-docs-end utilities-border-colors

$utilities-links-underline: map-loop($utilities-colors, rgba-css-var, "$key", "link-underline") !default;

$negative-spacers: if($enable-negative-margins, negativify-map($spacers), null) !default;

$gutters: $spacers !default;

